{"version":3,"file":"main~app~9773254c.bundle.js","mappings":"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","sources":["webpack://HeyCa!!/./src/scripts/components/Navigation.js","webpack://HeyCa!!/./src/scripts/components/MusicPlayer.js","webpack://HeyCa!!/./src/scripts/App.js","webpack://HeyCa!!/./src/scripts/components/ActionButton.js","webpack://HeyCa!!/./src/scripts/components/Carousel.js","webpack://HeyCa!!/./src/scripts/components/EmptyMessage.js","webpack://HeyCa!!/./src/scripts/components/LoginInput.js","webpack://HeyCa!!/./src/scripts/components/SkeletonLyric.js","webpack://HeyCa!!/./src/scripts/components/LyricMusic.js","webpack://HeyCa!!/./src/scripts/components/WavesLoader.js","webpack://HeyCa!!/./src/scripts/components/WavesLoaderStatic.js","webpack://HeyCa!!/./src/scripts/components/MusicPlayerCatalog.js","webpack://HeyCa!!/./src/scripts/components/NoteDetail.js","webpack://HeyCa!!/./src/scripts/components/NoteInput.js","webpack://HeyCa!!/./src/scripts/components/NoteItem.js","webpack://HeyCa!!/./src/scripts/components/NoteList.js","webpack://HeyCa!!/./src/scripts/components/OstPlayer.js","webpack://HeyCa!!/./src/scripts/components/PlaylistButton.js","webpack://HeyCa!!/./src/scripts/components/RegisterInput.js","webpack://HeyCa!!/./src/scripts/components/SearchBar.js","webpack://HeyCa!!/./src/scripts/components/SkeletonNoteItem.js","webpack://HeyCa!!/./src/scripts/components/SongItem.js","webpack://HeyCa!!/./src/scripts/components/SongList.js","webpack://HeyCa!!/./src/scripts/components/contents/skip-link.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  MdOutlineDarkMode,\n  MdOutlineLightMode,\n  MdTranslate,\n  MdOutlineGTranslate,\n  MdOutlineLogout,\n  MdFavoriteBorder,\n} from 'react-icons/md';\nimport { TbHome } from 'react-icons/tb';\nimport LocaleContext from '../contexts/LocaleContext';\n\nfunction Navigation({ logout }) {\n  const path = window.location.pathname;\n  const { localeContextValue, themeContextValue } = React.useContext(LocaleContext);\n  const { locale, toggleLocale } = localeContextValue;\n  const { theme, toggleTheme } = themeContextValue;\n\n  return (\n    <div className='note-app__nav'>\n      <p className='notes-app__title'>HeyCa!!</p>\n      <nav>\n        <div className='notes-app__nav-left'>\n          {\n            path === '/'\n              ? <Link aria-label='Add to favorite page' className='' to='/archived'><MdFavoriteBorder /></Link>\n              : <Link aria-label='Add to home page' className='' to='/'><TbHome /></Link>\n          }\n        </div>\n        <div className='notes-app__nav-right'>\n          <button aria-label='Add to change language' onClick={toggleLocale}>\n            {locale === 'id' ? <MdTranslate /> : <MdOutlineGTranslate />}\n          </button>\n          <button aria-label='Add to dark mode' onClick={toggleTheme}>\n            {theme === 'light' ? <MdOutlineDarkMode /> : <MdOutlineLightMode />}\n          </button>\n          <button aria-label='Add to logout' onClick={logout}>\n            <MdOutlineLogout />\n          </button>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nNavigation.propTypes = {\n  logout: PropTypes.func.isRequired,\n}\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  MdPlayArrow,\n  MdPause,\n  MdArrowForwardIos,\n  MdArrowBackIosNew,\n} from 'react-icons/md';\nimport LocaleContext from '../contexts/LocaleContext';\n\nfunction MusicPlayer({ songs }) {\n  const audioPlayer = React.useRef();\n  const { indexContextValue, isPlayingContextValue } = React.useContext(LocaleContext);\n  const { toggleIndex } = indexContextValue;\n  const { isPlaying, toggleIsPlaying } = isPlayingContextValue;\n  // const [ isPlaying, setIsPlaying ] = React.useState(false);\n  const [ index, setIndex ] = React.useState(0);\n  const [ currentTitle, setCurrentTitle ] = React.useState(songs[0].title);\n  const [ currentSinger, setCurrentSinger ] = React.useState(songs[0].singer);\n  const [ currentImg, setCurrentImg ] = React.useState(songs[0].img);\n  const [ currentSong, setCurrentSong ] = React.useState(songs[index].src);\n  const [ elapsed, setElapsed ] = React.useState(0);\n  const [ duration, setDuration ] = React.useState(0);\n\n  React.useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        const _elapsed = Math.floor(audioPlayer.current.currentTime);\n        const _duration = Math.floor(audioPlayer.current.duration);\n\n        setDuration(_duration);\n        setElapsed(_elapsed);\n      }, 100);\n      return () => clearInterval(interval);\n    }\n\n    const strokeElement = document.querySelectorAll('.stroke');\n      strokeElement.forEach(animation => {\n        animation.style.animationPlayState = 'paused';\n    });\n  }, [isPlaying]);\n\n  const togglePlay = () => {\n    const strokeElement = document.querySelectorAll('.stroke');\n\n    if (isPlaying) {\n      audioPlayer.current.pause();\n      strokeElement.forEach(animation => {\n        animation.style.animationPlayState = 'paused';\n      });\n    } else {\n      audioPlayer.current.play();\n      strokeElement.forEach(animation => {\n        animation.style.animationPlayState = 'running';\n      });\n    }\n\n    // setIsPlaying(prev => !prev);\n    toggleIsPlaying();\n  }\n\n  const togglePrev = () => {\n    if (index > 0) {\n      setIndex(prev => prev - 1);\n      audioPlayer.current.src = songs[index - 1].src;\n      setCurrentTitle(songs[index - 1].title);\n      setCurrentSinger(songs[index - 1].singer);\n      setCurrentImg(songs[index - 1].img);\n      toggleIndex(index - 1);\n\n      if (isPlaying) {\n        audioPlayer.current.play();\n      }\n    }\n  }\n\n  const toggleNext = () => {\n    if (index >= songs.length - 1) {\n      setIndex(0);\n      audioPlayer.current.src = songs[0].src;\n      setCurrentTitle(songs[0].title);\n      setCurrentSinger(songs[0].singer);\n      setCurrentImg(songs[0].img);\n      toggleIndex(0);\n\n      if (isPlaying) {\n        audioPlayer.current.play();\n      }\n    } else {\n      setIndex(prev => prev + 1);\n      audioPlayer.current.src = songs[index + 1].src;\n      setCurrentTitle(songs[index + 1].title);\n      setCurrentSinger(songs[index + 1].singer);\n      setCurrentImg(songs[index + 1].img);\n      toggleIndex(index + 1);\n\n      if (isPlaying) {\n        audioPlayer.current.play();\n      }\n    }\n  }\n\n  const onEndedEventHandler = () => {\n    toggleNext();\n  }\n\n  const onImageClickedHandler = (url) => {\n\t\tconst myModal = document.getElementById('myModal');\n\t\tconst modalImg = document.getElementById('modalImg');\n\n\t\tmyModal.style.display = 'block';\n\t\tmodalImg.src = url;\n\t}\n\n\tconst onCloseHandler = () => {\n\t\tconst myModal = document.getElementById('myModal');\n    myModal.style.display = 'none';\n  }\n\n  return (\n    <div className='music-player__container'>\n      <div className='music-player__box-img'>\n        <img \n          src={currentImg}\n          className='music-player__img animate-fading__player lazyload'\n          alt=''\n          onClick={() => onImageClickedHandler(currentImg)} />\n        <div id='myModal' className='modal'>\n\t\t\t\t\t<span className='close' onClick={onCloseHandler}>\n\t\t\t\t\t\t<MdArrowBackIosNew />\n\t\t\t\t\t</span>\n\t\t\t\t  <img className='modal-content' id='modalImg' alt='' />\n\t\t\t\t</div>\n      </div>\n      <Link className='music-player__link-title' to={`/song`}>\n        <div className='music-player__box-title'>\n          <p className='music-player__title'>{currentTitle}</p>\n          <p>{currentSinger}</p>\n        </div>\n      </Link>\n      <div className='music-player__button'>\n        <div className='music-player__prev'>\n          <button aria-label='Add to previous song' onClick={togglePrev}>\n            <MdArrowBackIosNew />\n          </button>\n        </div>\n        <div className='music-player__play'>\n          <button aria-label='Add to play and pause a song' onClick={togglePlay}>\n            {isPlaying ? <MdPause /> : <MdPlayArrow />}\n          </button>\n        </div>\n        <div className='music-player__next'>\n          <button aria-label='Add to next song' onClick={toggleNext}>\n            <MdArrowForwardIos />\n          </button>\n        </div>\n      </div>\n      <div className='music-player__box-track'>\n        <audio\n          ref={audioPlayer}\n          src={currentSong}\n          onEnded={onEndedEventHandler} />\n        <input\n          aria-label='Range of songs'\n          className='play-track'\n          type='range'\n          max={duration}\n          defaultValue={`${elapsed == duration ? 0 : elapsed}`} />\n      </div>\n    </div>\n  );\n}\n\nMusicPlayer.propTypes = {\n  songs: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default MusicPlayer;\n","import React from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { getUserLogged, putAccessToken } from './data/notesapi-source';\nimport { newSongs, songs } from './data/playlist';\nimport FavoriteSongIdb from './data/favorite-song-idb';\nimport FirstPage from './pages/FirstPage';\nimport RegisterPage from './pages/RegisterPage';\nimport LoginPage from './pages/LoginPage';\nimport Navigation from './components/Navigation';\nimport MusicPlayer from './components/MusicPlayer';\nimport HomePageWrapper from './pages/HomePageWrapper';\nimport AddPage from './pages/AddPage';\nimport ArchivedPageWrapper from './pages/ArchivedPageWrapper';\nimport DetailPage from './pages/DetailPage';\nimport SongPage from './pages/SongPage';\nimport PlaylistPage from './pages/PlaylistPage';\nimport NoPage from './pages/NoPage';\nimport LocaleContext from './contexts/LocaleContext';\nimport Swal from 'sweetalert2';\n\nfunction App() {\n  const navigate = useNavigate();\n  const [ locale, setLocale ] = React.useState(() => {\n    return localStorage.getItem('locale') || 'id';\n  });\n  const [ theme, setTheme ] = React.useState(() => {\n    return localStorage.getItem('theme') || 'light';\n  });\n  const [ authedUser, setAuthedUser ] = React.useState(null);\n  const [ initializing, setInitializing ] = React.useState(true);\n  const [ index, setIndex ] = React.useState(0);\n  const [ isPlaying, setIsPlaying ] = React.useState(false);\n  const [ likedIsPlaying, setLikedIsPlaying ] = React.useState(false);\n  const [ newIsPlaying, setNewIsPlaying ] = React.useState(false);\n  const [ allIsPlaying, setAllIsPlaying ] = React.useState(false);\n  const [ likedSong, setLikedSong ] = React.useState([]);\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await getUserLogged();\n        setAuthedUser(data);\n        setInitializing(false);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    getData();\n    document.documentElement.setAttribute('data-theme', theme);\n  }, []);\n\n  React.useEffect(() => {\n    const getAllSong = async () => {\n      try {\n        const songs = await FavoriteSongIdb.getAllSong();\n        setLikedSong(songs);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    getAllSong();\n  }, [likedSong]);\n\n  React.useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  const toggleLocale = () => {\n    setLocale((prevLocale) => {\n      const newLocale = prevLocale === 'id' ? 'en' : 'id';\n      localStorage.setItem('locale', newLocale);\n      return newLocale;\n    });\n  }\n\n  const localeContextValue = React.useMemo(() => {\n    return {\n      locale,\n      toggleLocale,\n    }\n  }, [locale]);\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => {\n      const newTheme = prevTheme === 'dark' ? 'light' : 'dark';\n      localStorage.setItem('theme', newTheme);\n      return newTheme;\n    });\n  }\n\n  const themeContextValue = React.useMemo(() => {\n    return {\n      theme, toggleTheme,\n    }\n  }, [theme]);\n\n  const toggleIndex = (index) => {\n    setIndex(index);\n  }\n\n  const indexContextValue = React.useMemo(() => {\n    return {\n      index, toggleIndex,\n    }\n  }, [index]);\n\n  const toggleIsPlaying = () => {\n    setIsPlaying(prev => !prev);\n  }\n\n  const isPlayingContextValue = React.useMemo(() => {\n    return {\n      isPlaying, toggleIsPlaying,\n    }\n  })\n\n  const contextValue = React.useMemo(() => {\n    return {\n      localeContextValue,\n      themeContextValue,\n      indexContextValue,\n      isPlayingContextValue,\n    }\n  }, [ locale, theme, index, isPlaying, ]);\n\n\n\n  const toggleLikedSongPlay = (value) => {\n    setLikedIsPlaying(prev => !prev);\n    setIsPlaying(value);\n  }\n\n  const toggleNewSongPlay = (value) => {\n    setNewIsPlaying(prev => !prev);\n    setIsPlaying(value);\n  }\n\n  const toggleAllSongPlay = (value) => {\n    setAllIsPlaying(prev => !prev);\n    setIsPlaying(value);\n  }\n\n  const onLoginSuccess = async ({ accessToken }) => {\n    putAccessToken(accessToken);\n    try {\n      const { data } = await getUserLogged();\n      setAuthedUser(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  const onLogout = () => {\n    Swal.fire({\n      title: 'Kamu kenapa? Yakin ingin pergi?',\n      text: 'Aku gak mau kamu pergi, aku ingin bersama kamu terus!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#d33',\n      cancelButtonColor: '#28a745',\n      confirmButtonText: 'Tetap pergi',\n      cancelButtonText: 'Tetap bersama',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setAuthedUser(null);\n        putAccessToken('');\n        navigate('/');\n        Swal.fire({\n          icon: 'success',\n          title: 'HeyCa!! Selalu MenantiMu!',\n          text: 'Aku akan selalu ada untukmu dan selalu merindukanmu!',\n          showConfirmButton: true,\n        });\n      }\n    });\n  }\n\n  if (initializing) {\n    return null;\n  }\n\n  if (authedUser === null) {\n    return (\n      <LocaleContext.Provider value={contextValue}>\n        <Routes>\n          <Route path='/' element={<FirstPage />} />\n          <Route path='/register' element={<RegisterPage />} />\n          <Route path='/login' element={<LoginPage loginSuccess={onLoginSuccess} />} />\n          <Route path='*' element={<NoPage />} />\n        </Routes>\n      </LocaleContext.Provider>\n    );\n  }\n\n  return (\n    <>\n      <LocaleContext.Provider value={contextValue}>\n        <header className='header-home'>\n          <Navigation logout={onLogout} name={authedUser.name} />\n          <MusicPlayer songs={songs} />\n        </header>\n        <main id='mainContent'>\n          <Routes>\n            <Route path='/' element={<HomePageWrapper />} />\n            <Route path='/add' element={<AddPage />} />\n            <Route path='/archived' element={<ArchivedPageWrapper />} />\n            <Route path='/notes/:id' element={<DetailPage />} />\n            <Route\n              path='/song'\n              element={\n                <SongPage\n                  likedSongLength={likedSong.length}\n                  newSongLength={newSongs.length}\n                  playedSongLength={songs.length} />} />\n            <Route\n              path='/song-liked'\n              element={\n                <PlaylistPage\n                  title={locale === 'id' ? 'Disukai' : 'Liked'}\n                  songLength={likedSong.length}\n                  isPlaying={likedIsPlaying}\n                  toggleIsPlaying={toggleLikedSongPlay}\n                  songs={likedSong} />} />\n            <Route\n              path='/song-new'\n              element={\n                <PlaylistPage\n                  title={locale === 'id' ? 'Hal baru' : 'New thing'}\n                  songLength={newSongs.length}\n                  isPlaying={newIsPlaying}\n                  toggleIsPlaying={toggleNewSongPlay}\n                  songs={newSongs} />} />\n            <Route\n              path='/song-played'\n              element={\n                <PlaylistPage\n                  title={locale === 'id' ? 'Baru saja dimainkan' : 'Just played'}\n                  songLength={songs.length}\n                  isPlaying={allIsPlaying}\n                  toggleIsPlaying={toggleAllSongPlay}\n                  songs={songs} />} />\n            <Route path='*' element={<NoPage />} />\n          </Routes>\n        </main>\n      </LocaleContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ActionButton({ id, icon, type, onDelete, onArchive, onUnarchive }) {\n  if (type === 'delete') {\n    return (\n      <div className='action-button btn-delete'>\n        <button aria-label='Add to delete note' className='red' type={type} onClick={() => onDelete(id)}>\n          {icon}\n        </button>\n      </div>\n    );\n  }\n\n  if (type === 'archive') {\n    return (\n      <div className='action-button'>\n        <button aria-label='Add to archive note' className='btn-archive' type={type} onClick={() => onArchive(id)}>\n          {icon}\n        </button>\n      </div>\n    );\n  }\n\n  if (type === 'unarchive') {\n    return (\n      <div className='action-button'>\n        <button aria-label='Add to unarchive note' className='btn-archive' type={type} onClick={() => onUnarchive(id)}>\n          {icon}\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className='action-button'>\n      <button aria-label='Add to adding note' type={type}>\n        {icon}\n      </button>\n    </div>\n  );\n}\n\nActionButton.propTypes = {\n  id: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  type: PropTypes.string,\n  onDelete: PropTypes.func,\n  onArchive: PropTypes.func,\n  onUnarchive: PropTypes.func,\n}\n\nexport default ActionButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Carousel = ({ listImage }) => {\n  const [ images, setImages ] = React.useState(listImage);\n  const [ index, setIndex ] = React.useState(0);\n  const timeoutRef = React.useRef(null);\n\n  const resetTimeout = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n  \n  React.useEffect(() => {\n    if (images.length) {\n      timeoutRef.current = setTimeout(() => {\n        setIndex((index + 1) % images.length)\n      }, 9000);\n    }\n\n    return () => {\n      resetTimeout();\n    }\n  }, [index])\n\n  return (\n    <img\n      src={images[index]}\n      className='hero-img animate-fading lazyload'\n      alt='Slideshow of memories' />\n  );\n}\n\nCarousel.propTypes = {\n  listImage: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Carousel;\n\n{/* <img class=\"heros__detail lazyload\"\n          src=\"./images/skeleton/placeholder.png\"\n          data-src=\"${CONFIG.BASE_IMAGE_URL_MEDIUM}/${this._restaurant.pictureId}\"\n          data-srcset=\"${CONFIG.BASE_IMAGE_URL}/${this._restaurant.pictureId} 480w, ${CONFIG.BASE_IMAGE_URL_MEDIUM}/${this._restaurant.pictureId} 920w\"\n          data-sizes=\"(max-width: 600px) 480px, 920px\"\n          alt=\"${this._restaurant.name}\" /> */}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MdOutlineSentimentDissatisfied,\n  MdOutlineSentimentVeryDissatisfied\n} from 'react-icons/md';\n\nfunction EmptyMessage({ message, isNoPage }) {\n  return (\n    <div className='empty-message'>\n      {\n        isNoPage\n          ? <MdOutlineSentimentVeryDissatisfied className='empty-message__icon' />\n          : <MdOutlineSentimentDissatisfied className='empty-message__icon' />\n      }\n      <p>{message}</p>\n    </div>\n  );\n}\n\nEmptyMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  isNoPage: PropTypes.bool,\n}\n\nexport default EmptyMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport LocaleContext from '../contexts/LocaleContext';\n\nfunction LoginInput({ login }) {\n  const { localeContextValue } = React.useContext(LocaleContext);\n  const { locale } = localeContextValue;\n  const [ email, handleEmailChange ] = useInput('');\n  const [ password, handlePasswordChange ] = useInput('');\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    login({\n      email,\n      password,\n    });\n  }\n\n  return (\n    <form onSubmit={onSubmitHandler} className='register-input login-input'>\n      <input type='email' placeholder='Email' value={email} onChange={handleEmailChange} required />\n      <input \n        type='password' \n        placeholder='Password' \n        value={password} \n        onChange={handlePasswordChange} \n        minLength='6' \n        required />\n        <button>{locale === 'id' ? 'Masuk' : 'Login'}</button>\n    </form>\n  );\n}\n\nLoginInput.propTypes = {\n  login: PropTypes.func.isRequired,\n}\n\nexport default LoginInput;\n","import React from 'react';\n\nfunction SkeletonLyric() {\n  return (\n    <div className={`note-item skeleton__animation lyric-music__container`}>\n      <div className='note-item__article'>\n        <div className='note-item__title skeleton-bars'>\n          <div style={{width: '20%', padding: '18px', marginBottom: '25px'}}></div>\n        </div>\n        <div className='note-item__body lyric-music__lyric skeleton-bars skeleton-bars__wrapper'>\n          <div style={{width: '85%', padding: '18px', marginBottom: '25px'}}></div>\n          <div style={{width: '60%', padding: '18px', marginBottom: '25px'}}></div>\n          <div style={{width: '75%', padding: '18px', marginBottom: '25px'}}></div>\n          <div style={{width: '60%', padding: '18px', marginBottom: '25px'}}></div>\n          <div style={{width: '90%', padding: '18px', marginBottom: '25px'}}></div>\n          <div style={{width: '80%', padding: '18px', marginBottom: '25px'}}></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SkeletonLyric;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SkeletonLyric from '../components/SkeletonLyric';\n\nfunction LyricMusic({ isLoading, lyric }) {\n  if (isLoading) {\n    return <SkeletonLyric />;\n  }\n\n  return (\n    <div className='note-item lyric-music__container'>\n      <div className='note-item__article'>\n        <p className='note-item__title lyric-music__title'>Lyric</p>\n        <div className='note-item__body lyric-music__lyric'>\n          <pre>{lyric.text}</pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLyricMusic.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  lyric: PropTypes.object.isRequired,\n}\n\nexport default LyricMusic;\n","import React from 'react';\n\nfunction WavesLoader() {\n  return (\n    <div className='waves-loader'>\n      <span className='stroke'></span>\n      <span className='stroke'></span>\n      <span className='stroke'></span>\n    </div>\n  );\n}\n\nexport default WavesLoader;\n","import React from 'react';\n\nfunction WavesLoaderStatic() {\n  return (\n    <div className='waves-loader'>\n      <span className='stroke-static stroke-hg-1'></span>\n      <span className='stroke-static stroke-hg-2'></span>\n      <span className='stroke-static stroke-hg-3'></span>\n    </div>\n  );\n}\n\nexport default WavesLoaderStatic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdFavoriteBorder, MdFavorite } from 'react-icons/md';\nimport FavoriteSongIdb from '../data/favorite-song-idb';\nimport WavesLoader from '../components/WavesLoader';\nimport WavesLoaderStatic from '../components/WavesLoaderStatic';\nimport LocaleContext from '../contexts/LocaleContext';\nimport Toastify from 'toastify-js';\n\nfunction MusicPlayerCatalog({ song }) {\n  const {\n    localeContextValue,\n    themeContextValue,\n    isPlayingContextValue } = React.useContext(LocaleContext);\n  const { locale } = localeContextValue;\n  const { theme } = themeContextValue;\n  const { isPlaying } = isPlayingContextValue;\n  const [ isLoading, setIsLoading ] = React.useState(true);\n  const [ isFavorite, setIsFavorite ] = React.useState(false);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 100);\n  }, []);\n\n  React.useEffect(() => {\n    const isSongExist = async (id) => {\n      const isSongExist = await FavoriteSongIdb.getSong(id);\n      if (isSongExist) {\n        setIsFavorite(true);\n      } else {\n        setIsFavorite(false);\n      }\n    }\n\n    isSongExist(song.id);\n  }, [song]);\n\n  const btnFavoriteListener = async (song) => {\n    await FavoriteSongIdb.putSong({ \n      ...song,\n      id: song.id,\n    });\n    setIsFavorite(true);\n    Toastify({\n      text: `${locale === 'id' ? 'Favorit ditambah' : 'Favorite added'}`,\n      duration: 2000,\n      gravity: 'bottom',\n      position: 'center',\n      stopOnFocus: true,\n      style: {\n        background: `${theme === 'light' ? 'linear-gradient(to right, #c2afe9, #bea8e7)' : '#2f3032'}`,\n        borderRadius: '21px',\n        padding: '15px 12px 18px 18px',\n        fontSize: '17px',\n        marginBottom: '20px',\n      }\n    }).showToast();\n  }\n\n  const btnUnfavoriteListener = async (id) => {\n    await FavoriteSongIdb.deleteSong(id);\n    setIsFavorite(false);\n    Toastify({\n      text: `${locale === 'id' ? 'Favorit dihapus' : 'Favorite deleted'}`,\n      duration: 2000,\n      gravity: 'bottom',\n      position: 'center',\n      stopOnFocus: true,\n      style: {\n        background: `${theme === 'light' ? 'linear-gradient(to right, #c2afe9, #bea8e7)' : '#2f3032'}`,\n        borderRadius: '21px',\n        padding: '15px 12px 18px 18px',\n        fontSize: '17px',\n        marginBottom: '20px',\n      }\n    }).showToast();\n  }\n\n  return (\n    <div className='playlist music-player-catalog'>\n      {\n        isLoading\n          ? <div className='skeleton__playlist-img'></div>\n          : <img\n              src={song.img}\n              className='animate-fading__playlist lazyload'\n              alt='' />\n      }\n      {\n        isPlaying ? <WavesLoader /> : <WavesLoaderStatic />\n      }\n      <div className='music-player-catalog__body'>\n        <div className='playlist__box-title'>\n          <p className='playlist__title'>{song.title}</p>\n          <p>{song.singer}</p>\n        </div>\n        {\n          isFavorite\n            ? (<button onClick={() => btnUnfavoriteListener(song.id)} className='like-btn'>\n                <MdFavorite className='music-player-catalog__icon unfavorite' />\n              </button>)\n            : (<button onClick={() => btnFavoriteListener(song)} className='like-btn'>\n                <MdFavoriteBorder className='music-player-catalog__icon' />\n              </button>)\n        }\n      </div>\n    </div>\n  )\n}\n\nMusicPlayerCatalog.propTypes = {\n  song: PropTypes.object.isRequired,\n}\n\nexport default MusicPlayerCatalog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdDeleteOutline, MdFavoriteBorder, MdHeartBroken } from 'react-icons/md';\nimport { showFormattedDate } from '../utils/showFormattedDate';\nimport ActionButton from '../components/ActionButton';\n\nfunction NoteDetail({ id, title, createdAt, body, archived, onDelete, onArchive, onUnarchive }) {\n  return (\n    <div className='note-detail'>\n      <p className='note-detail__title'>{title}</p>\n      <p className='note-detail__date'>{showFormattedDate(createdAt)}</p>\n      <p className='note-detail__body'>{body}</p>\n      <ActionButton icon={<MdDeleteOutline />} id={id} type='delete' onDelete={onDelete} />\n      {\n        archived\n          ? <ActionButton icon={<MdHeartBroken />} id={id} type='unarchive' onUnarchive={onUnarchive} />\n          : <ActionButton icon={<MdFavoriteBorder />} id={id} type='archive' onArchive={onArchive} />\n      }\n    </div>\n  );\n}\n\nNoteDetail.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  createdAt: PropTypes.string,\n  body: PropTypes.string,\n  archived: PropTypes.bool,\n  onDelete: PropTypes.func.isRequired,\n  onArchive: PropTypes.func.isRequired,\n  onUnarchive: PropTypes.func.isRequired,\n}\n\nexport default NoteDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FiCheck } from 'react-icons/fi';\nimport ActionButton from './ActionButton';\nimport useInput from '../hooks/useInput';\nimport LocaleContext from '../contexts/LocaleContext';\n\nfunction NoteInput({ addNote }) {\n  const { localeContextValue } = React.useContext(LocaleContext);\n  const { locale } = localeContextValue;\n  const [ title, handleTitleChange ] = useInput('');\n  const [ body, handleBodyChange ] = useInput('');\n\n  const onSubmitEventHandler = (event) => {\n    event.preventDefault();\n    addNote({ \n      title, body\n    });\n  }\n\n  return (\n    <div className='note-input'>\n      <form onSubmit={onSubmitEventHandler}>\n        <input\n          type='text'\n          placeholder={locale === 'id' ? 'Judul' : 'Title'}\n          required\n          value={title}\n          onChange={handleTitleChange} />\n        <textarea\n          type='text'\n          placeholder={locale === 'id' ? 'Catatan' : 'Notes'}\n          required\n          value={body}\n          onChange={handleBodyChange} />\n        <ActionButton icon={<FiCheck />} type='submit' />\n      </form>\n    </div>\n  );\n}\n\nNoteInput.propTypes = {\n  addNote: PropTypes.func.isRequired,\n}\n\nexport default NoteInput;\n","import React from 'react';\nimport { showFormattedDate } from '../utils/showFormattedDate';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MdOutlineRemoveRedEye } from 'react-icons/md';\n\nfunction NoteItem({ id, title, createdAt, body }) {\n  let description = body;\n\n  if (description.length > 80) {\n    description = body.substring(0, 80) + '...';\n  }\n\n  return (\n    <div className='note-item note-item__animation'>\n      <div className='note-item__article'>\n        <p className='note-item__title'>{title}</p>\n        <p className='note-item__body'>{description}</p>\n      </div>\n      <div className='note-item__action'>\n        <p className='note-item__date'>{showFormattedDate(createdAt)}</p>\n        <Link aria-label='Add to see detail note' to={`/notes/${id}`} className='note-item__action-btn'>\n          <MdOutlineRemoveRedEye />\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nNoteItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n}\n\nexport default NoteItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NoteItem from './NoteItem';\n\nfunction NoteList({ notes }) {\n  return (\n    <div className='note-list'>\n      {\n        notes.map((note) => (\n          <NoteItem key={note.id} {...note} />\n        ))\n      }\n    </div>\n  );\n}\n\nNoteList.propTypes = {\n  notes: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default NoteList;\n","import React from 'react';\nimport { MdPlayArrow, MdPause, MdArrowForwardIos, MdArrowBackIosNew, } from 'react-icons/md';\nimport { ost } from '../data/playlist';\n\nfunction OstPlayer() {\n  const audioPlayer = React.useRef();\n  const [ index, setIndex ] = React.useState(0);\n  const [ currentTitle, setCurrentTitle ] = React.useState(ost[0].title);\n  const [ currentSong, setCurrentSong ] = React.useState(ost[index].src);\n  const [ isPlaying, setIsPlaying ] = React.useState(false);\n  const [ elapsed, setElapsed ] = React.useState(0);\n  const [ duration, setDuration ] = React.useState(0);\n\n  React.useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        const _elapsed = Math.floor(audioPlayer.current.currentTime);\n        const _duration = Math.floor(audioPlayer.current.duration);\n\n        setDuration(_duration);\n        setElapsed(_elapsed);\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying]);\n\n  const togglePlay = () => {\n    if (isPlaying) {\n      audioPlayer.current.pause();\n    } else {\n      audioPlayer.current.play();\n    }\n\n    setIsPlaying(prev => !prev);\n  }\n\n  const togglePrev = () => {\n    if (index > 0) {\n      setIndex(prev => prev - 1);\n      audioPlayer.current.src = ost[index - 1].src;\n      setCurrentTitle(ost[index - 1].title);\n\n      if (isPlaying) {\n        audioPlayer.current.play();\n      }\n    }\n  }\n\n  const toggleNext = () => {\n    if (index >= ost.length - 1) {\n      setIndex(0);\n      audioPlayer.current.src = ost[0].src;\n      setCurrentTitle(ost[0].title);\n\n      if (isPlaying) {\n        audioPlayer.current.play();\n      }\n    } else {\n      setIndex(prev => prev + 1);\n      audioPlayer.current.src = ost[index + 1].src;\n      setCurrentTitle(ost[index + 1].title);\n\n      if (isPlaying) {\n        audioPlayer.current.play();\n      }\n    }\n  }\n\n  const onEndedEventHandler = () => {\n    toggleNext();\n  }\n\n  return (\n    <div className='ost-player__container'>\n      <p>{currentTitle}</p>\n      <audio\n        ref={audioPlayer}\n        src={currentSong}\n        onEnded={onEndedEventHandler} />\n      <input\n        aria-label='Range of songs'\n        className='play-track'\n        type='range'\n        max={duration}\n        defaultValue={`${elapsed == duration ? 0 : elapsed}`} />\n      <div className='ost-player__button'>\n        <div className='ost-player__prev'>\n          <button aria-label='Add to previous song' onClick={togglePrev}>\n            <MdArrowBackIosNew />\n          </button>\n        </div>\n        <div className='ost-player__play'>\n          <button aria-label='Add to play and pause a song' onClick={togglePlay}>\n            {isPlaying ? <MdPause /> : <MdPlayArrow />}\n          </button>\n        </div>\n        <div className='ost-player__next'>\n          <button aria-label='Add to next song' onClick={toggleNext}>\n            <MdArrowForwardIos />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OstPlayer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { MdArrowForwardIos } from 'react-icons/md';\nimport LocaleContext from '../contexts/LocaleContext';\n\nfunction PlaylistButton({ duration, img, url, text, length }) {\n  const { themeContextValue, localeContextValue } = React.useContext(LocaleContext);\n  const { theme } = themeContextValue;\n  const { locale } = localeContextValue;\n  const [ isLoading, setIsLoading ] = React.useState(true);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, parseInt(duration));\n  }, [isLoading]);\n\n  return (\n    <div className='playlist'>\n      {\n        isLoading\n          ? <div className='animate-fading__playlist skeleton__playlist-img'></div>\n          : <img\n              src={`${theme === 'light' ? `${img}.webp` : `${img}-dark.webp`}`}\n              className='animate-fading__playlist lazyload'\n              alt='' />\n      }\n      <Link to={url} className='playlist__link'>\n        <div className='playlist__box-title'>\n          <p className='playlist__title'>{text}</p>\n          <p>{length} {locale === 'id' ? 'lagu' : 'songs'}</p>\n        </div>\n        <div className='playlist__icon'>\n          <MdArrowForwardIos />\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default PlaylistButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport LocaleContext from '../contexts/LocaleContext';\n\nfunction RegisterInput({ register }) {\n  const { localeContextValue } = React.useContext(LocaleContext);\n  const { locale } = localeContextValue;\n  const [ name, handleNameChange ] = useInput('');\n  const [ email, handleEmailChange ] = useInput('');\n  const [ password, handlePasswordChange ] = useInput('');\n  const [ confirmPassword, handleConfirmPasswordChange ] = useInput('');\n  const [ checkConfirmPassword, setCheckConfirmPassword ] = React.useState('');\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (password === confirmPassword) {\n      register({\n        name, email, password,\n      });\n    }\n  }\n\n  const onInputConfirmPasswordHandler = () => {\n    setCheckConfirmPassword('correct');\n  }\n\n  const onCheckConfirmPasswordHandler = () => {\n    if (confirmPassword.length >= 1 && password !== confirmPassword) {\n      setCheckConfirmPassword('wrong');\n    } else {\n      setCheckConfirmPassword('correct');\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmitHandler} className='register-input'>\n      <input\n        type='text'\n        placeholder={locale === 'id' ? 'Nama' : 'Name'}\n        value={name} onChange={handleNameChange}\n        required />\n      <input\n        type='email'\n        placeholder='Email'\n        value={email}\n        onChange={handleEmailChange}\n        required />\n      <input \n        type='password' \n        placeholder='Password' \n        value={password} \n        onChange={handlePasswordChange} \n        minLength='6' \n        required />\n      <input \n        className={`confirm-password ${checkConfirmPassword}`}\n        type='password' \n        placeholder={locale === 'id' ? 'Konfirmasi Password' : 'Confirm Password'} \n        autoComplete='current-password' \n        value={confirmPassword} \n        onChange={handleConfirmPasswordChange}\n        onBlur={onCheckConfirmPasswordHandler}\n        onFocus={onCheckConfirmPasswordHandler}\n        onInput={onInputConfirmPasswordHandler}\n        minLength='6'\n        required />\n      <button>{locale === 'id' ? 'Daftar' : 'Register'}</button>\n    </form>\n  );\n}\n\nRegisterInput.proptypes = {\n  register: PropTypes.func.isRequired,\n}\n\nexport default RegisterInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LocaleContext from '../contexts/LocaleContext';\n\nfunction SearchBar({ keyword, keywordChange }) {\n  const { localeContextValue } = React.useContext(LocaleContext);\n  const { locale } = localeContextValue;\n\n  return (\n    <div className='search-bar'>\n      <input\n        className='input'\n        type='text'\n        placeholder={locale === 'id' ? 'Cari catatan' : 'Search notes'}\n        value={keyword}\n        onChange={(event) => keywordChange(event.target.value)} />\n    </div>\n  );\n}\n\nSearchBar.propType = {\n  keyword: PropTypes.string.isRequired,\n  keywordChange: PropTypes.func.isRequired,\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nfunction SkeletonNoteItem() {\n  return (\n    <div className='note-item skeleton__animation skeleton-bars__wrapper'>\n      <div className='note-item__article skeleton-bars'>\n        <div style={{width: '77%', padding: '19px', marginBottom: '20px', marginTop: '10px'}}></div>\n        <div style={{width: '92%', padding: '9px', marginBottom: '6px'}}></div>\n        <div style={{width: '92%', padding: '9px', marginBottom: '6px'}}></div>\n        <div style={{width: '80%', padding: '9px', marginBottom: '6px'}}></div>\n        <div style={{width: '46%', padding: '7px', marginBottom: '15px', marginTop: '25px'}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default SkeletonNoteItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdFavorite, MdMoreVert } from 'react-icons/md';\nimport FavoriteSongIdb from '../data/favorite-song-idb';\n\nfunction SongItem({ id, img, title, singer }) {\n  const [ isFavorite, setIsFavorite ] = React.useState(false);\n\n  React.useEffect(() => {\n    const isSongExist = async (id) => {\n      const isSongExist = await FavoriteSongIdb.getSong(id);\n      if (isSongExist) {\n        setIsFavorite(true);\n      } else {\n        setIsFavorite(false);\n      }\n    }\n\n    isSongExist(id);\n  }, [id]);\n\n  return (\n    <div className='song-item'>\n      <img\n        src='./images/skeleton/placeholder.webp'\n        data-src={img}\n        className='animate-fading__playlist lazyload'\n        alt='' />\n      <div className='song-item__body'>\n        <div className='song-item__box-title'>\n          <p className='song-item__title'>{title}</p>\n          <p>{singer}</p>\n        </div>\n        {\n          isFavorite\n            ? (<button onClick={() => window.alert(`favorite clicked id: ${id}`)}>\n                <MdFavorite className='song-item__icon' />\n              </button>)\n            : (<div></div>)\n        }\n        <button onClick={() => window.alert(`more ver clicked id: ${id}`)}>\n          <MdMoreVert className='song-item__icon' />\n        </button>\n      </div>\n    </div>);\n}\n\nSongItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  singer: PropTypes.string.isRequired,\n}\n\nexport default SongItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SongItem from './SongItem';\n\nfunction SongList({ songs }) {\n  return (\n    <div className='song-list'>\n      {\n        songs.map((song) => (\n          <SongItem key={song.id} {...song} />\n        ))\n      }\n    </div>\n  );\n}\n\nSongList.propTypes = {\n  songs: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default SongList;\n","class SkipLink extends HTMLElement {\n  connectedCallback() {\n    this.render();\n  }\n\n  render() {\n    this.innerHTML = `\n      <a href=\"#mainContent\" class=\"skip-link\">Skip to content</a>\n    `;\n  }\n}\n\ncustomElements.define('skip-link', SkipLink);\n"],"names":["Navigation","_ref","logout","path","window","location","pathname","localeContextValue","themeContextValue","React","LocaleContext","locale","toggleLocale","theme","toggleTheme","className","Link","to","MdFavoriteBorder","TbHome","onClick","MdTranslate","MdOutlineGTranslate","MdOutlineDarkMode","MdOutlineLightMode","MdOutlineLogout","propTypes","PropTypes","isRequired","MusicPlayer","songs","audioPlayer","indexContextValue","isPlayingContextValue","toggleIndex","isPlaying","toggleIsPlaying","index","setIndex","currentTitle","setCurrentTitle","title","currentSinger","setCurrentSinger","singer","currentImg","setCurrentImg","img","currentSong","setCurrentSong","src","elapsed","setElapsed","duration","setDuration","interval","setInterval","_elapsed","Math","floor","current","currentTime","_duration","clearInterval","document","querySelectorAll","forEach","animation","style","animationPlayState","toggleNext","length","play","prev","alt","url","myModal","getElementById","modalImg","display","onImageClickedHandler","id","onCloseHandler","MdArrowBackIosNew","togglePrev","togglePlay","strokeElement","pause","MdPause","MdPlayArrow","MdArrowForwardIos","ref","onEnded","onEndedEventHandler","type","max","defaultValue","concat","navigate","useNavigate","setLocale","localStorage","getItem","setTheme","authedUser","setAuthedUser","initializing","setInitializing","setIsPlaying","likedIsPlaying","setLikedIsPlaying","newIsPlaying","setNewIsPlaying","allIsPlaying","setAllIsPlaying","likedSong","setLikedSong","async","data","getUserLogged","e","console","log","getData","documentElement","setAttribute","FavoriteSongIdb","getAllSong","prevLocale","newLocale","setItem","prevTheme","newTheme","contextValue","Provider","value","Routes","Route","element","FirstPage","RegisterPage","LoginPage","loginSuccess","accessToken","putAccessToken","NoPage","onLogout","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","showConfirmButton","name","HomePageWrapper","AddPage","ArchivedPageWrapper","DetailPage","SongPage","likedSongLength","newSongLength","newSongs","playedSongLength","PlaylistPage","songLength","ActionButton","onDelete","onArchive","onUnarchive","Carousel","listImage","images","setImages","timeoutRef","setTimeout","clearTimeout","EmptyMessage","message","isNoPage","MdOutlineSentimentVeryDissatisfied","MdOutlineSentimentDissatisfied","LoginInput","login","email","handleEmailChange","useInput","password","handlePasswordChange","onSubmit","event","preventDefault","placeholder","onChange","required","minLength","width","padding","marginBottom","LyricMusic","isLoading","lyric","SkeletonLyric","MusicPlayerCatalog","song","setIsLoading","isFavorite","setIsFavorite","isSongExist","getSong","WavesLoader","WavesLoaderStatic","deleteSong","Toastify","gravity","position","stopOnFocus","background","borderRadius","fontSize","showToast","btnUnfavoriteListener","MdFavorite","putSong","btnFavoriteListener","NoteDetail","createdAt","body","archived","showFormattedDate","MdDeleteOutline","MdHeartBroken","NoteInput","addNote","handleTitleChange","handleBodyChange","FiCheck","NoteItem","description","substring","MdOutlineRemoveRedEye","NoteList","notes","map","note","_extends","key","ost","parseInt","RegisterInput","register","handleNameChange","confirmPassword","handleConfirmPasswordChange","checkConfirmPassword","setCheckConfirmPassword","onCheckConfirmPasswordHandler","autoComplete","onBlur","onFocus","onInput","onInputConfirmPasswordHandler","proptypes","SearchBar","keyword","keywordChange","target","propType","marginTop","SongItem","alert","MdMoreVert","SongList","SkipLink","HTMLElement","connectedCallback","this","render","innerHTML","customElements","define"],"sourceRoot":""}